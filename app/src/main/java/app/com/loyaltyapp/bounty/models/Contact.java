package app.com.loyaltyapp.bounty.models;


public class Contact {

    public static final Contact[] CONTACTS = new Contact[] {
            new Contact("John", "#33b5e5", "+01 123456789", "john@example.com", "1000"),
            new Contact("Valter", "#ffbb33", "+01 987654321", "valter@example.com", "1000"),
            new Contact("Eadwine", "#ff4444", "+01 123456789", "eadwin@example.com", "1000"),
            new Contact("Teddy", "#99cc00", "+01 987654321", "teddy@example.com", "1000"),
            new Contact("Ives", "#33b5e5", "+01 11235813", "ives@example.com", "1000"),
            new Contact("Alajos", "#ffbb33", "+01 123456789", "alajos@example.com", "1000"),
            new Contact("Gianluca", "#ff4444", "+01 11235813", "me@gian.lu", "1000"),
            new Contact("Fane", "#99cc00", "+01 987654321", "fane@example.com", "1000"),
    };

    private final String name,phone,email,color,points;

    Contact(String cname, String color1, String cphone, String cemail, String cpoints){
        name = cname;
        phone = cphone;
        email = cemail;
        color = color1;
        points = cpoints;
    }

    // This method allows to get the item associated to a particular id,
    // uniquely generated by the method getId defined below
    public static Contact getItem(int id) {
        for (Contact item : CONTACTS) {
            if (item.getId() == id) {
                return item;
            }
        }
        return null;
    }

    // since mName and mPhone combined are surely unique,
    // we don't need to add another id field
    public int getId() {
        return name.hashCode() + phone.hashCode();
    }

    public static enum Field {
        NAME, COLOR, PHONE, EMAIL, POINTS
    }
    public String get(Field f) {
        switch (f) {
            case COLOR: return color;
            case PHONE: return phone;
            case EMAIL: return email;
            case POINTS: return points;
            case NAME: default: return name;
        }
    }

}
